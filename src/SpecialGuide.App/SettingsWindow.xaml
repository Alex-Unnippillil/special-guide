<Window x:Class="SpecialGuide.App.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:val="clr-namespace:SpecialGuide.App.Validation"
        Title="Settings" Height="Auto" Width="400">
    <Grid Margin="10" FontFamily="{StaticResource DefaultFontFamily}" Foreground="{StaticResource DefaultForeground}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" Text="API Key" Margin="0,0,5,10"/>
        <TextBox Grid.Row="0" Grid.Column="1" Margin="0,0,0,10">
            <TextBox.Text>
                <Binding Path="ApiKey" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:NotEmptyValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <CheckBox Grid.Row="1" Grid.ColumnSpan="2" Content="Auto Paste" IsChecked="{Binding AutoPaste}" Margin="0,0,0,10"/>

        <TextBlock Grid.Row="2" Grid.Column="0" Text="Hotkey" Margin="0,0,5,10"/>
        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Hotkey}" Margin="0,0,0,10"/>

        <TextBlock Grid.Row="3" Grid.Column="0" Text="Capture Mode" Margin="0,0,5,10"/>
        <ComboBox Grid.Row="3" Grid.Column="1" SelectedValue="{Binding CaptureMode}" SelectedValuePath="Content" Margin="0,0,0,10">
=======
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Window.Resources>
        <Style x:Key="ValidationTextBoxStyle" TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <Border BorderBrush="Red" BorderThickness="1">
                            <AdornedElementPlaceholder />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock Text="Hotkey" />
        <TextBox x:Name="HotkeyBox"
                 Text="{Binding Hotkey}"
                 Margin="0,0,0,2"
                 IsReadOnly="True"
                 PreviewKeyDown="HotkeyBox_OnPreviewKeyDown" />
        <TextBlock x:Name="HotkeyError"
                   Foreground="Red"
                   Visibility="Collapsed"
                   Margin="0,0,0,10"/>
=======
        <TextBlock Grid.Row="0" Text="API Key" Margin="0,0,5,5" />
        <TextBox Grid.Row="0" Grid.Column="1" Margin="0,0,0,10"
                 Text="{Binding ApiKey, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Style="{StaticResource ValidationTextBoxStyle}" />

        <CheckBox Grid.Row="1" Grid.ColumnSpan="2" Content="Auto Paste"
                  IsChecked="{Binding AutoPaste}" Margin="0,0,0,10" />

        <TextBlock Grid.Row="2" Text="Hotkey" Margin="0,0,5,5" />
        <TextBox Grid.Row="2" Grid.Column="1" Margin="0,0,0,10"
                 Text="{Binding Hotkey}" />

        <TextBlock Grid.Row="3" Text="Capture Mode" Margin="0,0,5,5" />
        <ComboBox Grid.Row="3" Grid.Column="1" Margin="0,0,0,10"
                  SelectedValue="{Binding CaptureMode}" SelectedValuePath="Content">
            <ComboBoxItem Content="FullScreen" />
            <ComboBoxItem Content="ActiveWindow" />
            <ComboBoxItem Content="CursorRegion" />
        </ComboBox>

        <TextBlock Grid.Row="4" Grid.Column="0" Text="Max Suggestion Length" Margin="0,0,5,10"/>
        <TextBox Grid.Row="4" Grid.Column="1" Margin="0,0,0,10">
            <TextBox.Text>
                <Binding Path="MaxSuggestionLength" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <val:NumericValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>

        <StackPanel Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="Save" Width="80" Margin="0,0,5,0" Click="OnSave" />
            <Button Content="Cancel" Width="80" Click="OnCancel" />
=======
        <TextBlock Grid.Row="4" Text="Max Suggestion Length" Margin="0,0,5,5" />
        <TextBox Grid.Row="4" Grid.Column="1" Margin="0,0,0,10"
                 Text="{Binding MaxSuggestionLength, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                 Style="{StaticResource ValidationTextBoxStyle}" />

        <StackPanel Grid.Row="5" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Click="OnSave" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Margin="0,0,5,0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="ðŸ’¾" Margin="0,0,5,0" />
                    <TextBlock Text="Save" />
                </StackPanel>
            </Button>
            <Button Click="OnCancel" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="âœ–" Margin="0,0,5,0" />
                    <TextBlock Text="Cancel" />
                </StackPanel>
            </Button>
        </StackPanel>
    </Grid>
</Window>
